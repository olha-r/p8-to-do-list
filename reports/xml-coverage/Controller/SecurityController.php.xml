<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="SecurityController.php" path="/Controller">
    <totals>
      <lines total="38" comments="10" code="28" executable="3" executed="3" percent="100.00"/>
      <methods count="1" tested="1" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Controller\SecurityController" start="10" executable="3" executed="3" crap="2">
      <namespace name="App\Controller"/>
      <method name="login" signature="login(Symfony\Component\Security\Http\Authentication\AuthenticationUtils $authenticationUtils): Symfony\Component\HttpFoundation\Response" start="15" end="27" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="logout" signature="logout(): void" start="32" end="36" crap="1" executable="0" executed="0" coverage="100"/>
    </class>
    <coverage>
      <line nr="18">
        <covered by="App\Tests\Controller\SecurityControllerTest::testDisplayLoginForm"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLoginSuccessful"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLoginWithBadCredentials"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
      </line>
      <line nr="21">
        <covered by="App\Tests\Controller\SecurityControllerTest::testDisplayLoginForm"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLoginSuccessful"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLoginWithBadCredentials"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
      </line>
      <line nr="23">
        <covered by="App\Tests\Controller\SecurityControllerTest::testDisplayLoginForm"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLoginSuccessful"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLoginWithBadCredentials"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Controller</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Bundle</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">FrameworkBundle</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Controller</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AbstractController</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">HttpFoundation</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Routing</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Annotation</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Route</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Http</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Authentication</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AuthenticationUtils</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SecurityController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractController</token>
      </line>
      <line no="11">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT">     * @Route("/login", name="login")</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">login</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">AuthenticationUtils</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authenticationUtils</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// get the login error if there is one</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authenticationUtils</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastAuthenticationError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// last username entered by the user</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lastUsername</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authenticationUtils</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">render</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'security/login.html.twig'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'last_username'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lastUsername</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE">         </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     * @Route("/logout", name="logout", methods={"GET"})</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">logout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// controller can be blank: it will never be called!</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">       </token>
        <token name="T_COMMENT">// throw new \Exception('Don\'t forget to activate logout in security.yaml');</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38"/>
    </source>
  </file>
</phpunit>
